{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","rows","value","onChange","event","target","toUpperCase","showAlert","toLowerCase","newText","split","join","navigator","clipboard","writeText","length","toFixed","Alert","alert","role","msg","App","setMode","setAlert","message","setTimeout","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4LAIe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACA,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAQJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACV,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,kCCvBa,SAASC,EAASV,GAE7B,MAAwBW,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAmCA,OACI,gCACI,sBAAKZ,UAAU,OAAf,UACI,uBAAOQ,QAAQ,QAAQR,UAAS,+BAAuC,UAAbD,EAAME,KAAe,OAAO,SAAtF,SAAiG,6BAAI,6DACrG,0BAAUD,UAAS,aAAqB,SAAbD,EAAME,KAAc,YAAY,QAAxC,yDAA6G,UAAbF,EAAME,KAAe,OAAO,SAAWI,GAAG,QAAQQ,KAAM,EAAGC,MAAOH,EAAMI,SATvM,SAAwBC,GAEpBJ,EAAQI,EAAMC,OAAOH,aASjB,wBAAQd,UAAU,6CAA6CM,QAvCvE,WAEIM,EAAQD,EAAKO,eACbnB,EAAMoB,UAAU,0BAA0B,YAoCtC,SAAoF,uDACpF,wBAAQnB,UAAU,6CAA6CM,QAlCvE,WAEIM,EAAQD,EAAKS,eACbrB,EAAMoB,UAAU,yBAAyB,YA+BrC,SAAoF,uDACpF,wBAAQnB,UAAU,6CAA6CM,QA9BvE,WACI,IAAIe,EAAQV,EAAKW,MAAM,QACvBV,EAAQS,EAAQE,KAAK,MACrBxB,EAAMoB,UAAU,wBAAwB,YA2BpC,SAA2F,sDAC3F,wBAAQnB,UAAU,6CAA6CM,QAzBvE,WAEIkB,UAAUC,UAAUC,UAAUf,GAC9BZ,EAAMoB,UAAU,uBAAuB,YAsBnC,SAAoF,4CACpF,wBAAQnB,UAAU,6CAA6CM,QArBvE,WAEIM,EAAQ,IACRb,EAAMoB,UAAU,gBAAgB,YAkB5B,SAAoF,6CACpF,sBAAKnB,UAAS,yBAAiC,UAAbD,EAAME,KAAe,OAAO,SAA9D,UACI,mDAGA,8BACI,8BAAIU,EAAKW,MAAM,KAAKK,OAApB,OADJ,cAC+C,kCAAKhB,EAAKgB,UADzD,cAEI,uBACA,6BACOhB,EAAKW,MAAM,KAAKK,OAAU,KAAKC,QAAQ,KAJlD,mBAQA,yCACA,4BACI,4BACKjB,YC/DV,SAASkB,EAAM9B,GAC1B,OACIA,EAAM+B,OACF,qBAAK9B,UAAS,sBAAiBD,EAAM+B,MAAM1B,KAA7B,gCAAiE2B,KAAK,QAApF,SAA4F,iCAAShC,EAAM+B,MAAME,Q,MCyD9GC,MAhDf,WACE,MAAwBvB,mBAAS,SAAjC,mBAAOT,EAAP,KAAaiC,EAAb,KACA,EAA0BxB,mBAAS,MAAnC,mBAAOoB,EAAP,KAAcK,EAAd,KAEMhB,EAAY,SAACiB,EAAShC,GAC1B+B,EAAS,CACPH,IAAKI,EACLhC,KAAMA,IAERiC,YAAW,WACTF,EAAS,QACR,OAeL,OACE,qCAEE,cAACrC,EAAD,CAAQK,MAAM,wBAAwBF,KAAMA,EAAMM,WAfnC,WACL,SAARN,GACFiC,EAAQ,QACRI,SAASC,KAAKC,MAAMC,gBAAkB,UACtCtB,EAAU,6BAA8B,aAGxCe,EAAQ,SACRI,SAASC,KAAKC,MAAMC,gBAAkB,QACtCtB,EAAU,8BAA+B,eAOzC,cAACU,EAAD,CAAOC,MAAOA,IACd,qBAAK9B,UAAU,YAAf,SAMI,cAACS,EAAD,CAAUR,KAAMA,EAAMkB,UAAWA,UCvC5BuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BZ,K","file":"static/js/main.ec995eb9.chunk.js","sourcesContent":["import React from 'react'\r\n// import {Link} from 'react-router-dom';\r\n// import PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\"> */}\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About Us</Link> */}\r\n              {/* </li>  */}\r\n              \r\n              \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n    )\r\n}\r\n\r\n{/* Navbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}; */}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    function setToUpper() {\r\n\r\n        setText(text.toUpperCase());\r\n        props.showAlert(\"Converted to Uppercase.\",\"success\");\r\n    }\r\n\r\n    function setToLower() {\r\n\r\n        setText(text.toLowerCase());\r\n        props.showAlert(\"Coverted to Lowercase.\",\"success\");\r\n    }\r\n    function handleExtraSpaces() {\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed.\",\"success\");\r\n    }\r\n    \r\n    function handleCopy() {\r\n\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to clipboard.\",\"success\");\r\n    }\r\n    function setToClear() {\r\n\r\n        setText(\"\");\r\n        props.showAlert(\"Text cleared.\",\"success\");\r\n    }\r\n\r\n    function handleOnChange(event) {\r\n\r\n        setText(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"mb-3\">\r\n                <label htmlFor=\"myBox\" className={`form-label my-3 text-${props.mode==='light'?'dark':'white'}`}><h2><i>Enter text to analyze : </i></h2></label>\r\n                <textarea className={`bg-${props.mode==='dark'?'secondary':'white'} form-control rounded border-4 px-4 py-3 text-${props.mode==='light'?'dark':'white'}`} id=\"myBox\" rows={8} value={text} onChange={handleOnChange} />\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2 rounded-pill border-4\" onClick={setToUpper}><b>Convert to Uppercase</b></button>\r\n            <button className=\"btn btn-primary mx-2 rounded-pill border-4\" onClick={setToLower}><b>Convert to Lowercase</b></button>\r\n            <button className=\"btn btn-primary mx-2 rounded-pill border-4\" onClick={handleExtraSpaces}><b>Remove Extra Spaces</b></button>\r\n            <button className=\"btn btn-primary mx-2 rounded-pill border-4\" onClick={handleCopy}><b>Copy Text</b></button>\r\n            <button className=\"btn btn-primary mx-2 rounded-pill border-4\" onClick={setToClear}><b>Clear text</b></button>\r\n            <div className={`mb-3 my-2 text-${props.mode==='light'?'dark':'white'}`}>\r\n                <h3>\r\n                    Your text summary\r\n                </h3>\r\n                <p>\r\n                    <b>{text.split(\" \").length} </b> words  |  <b> {text.length}</b> characters\r\n                    <br />\r\n                    <b>\r\n                        {((text.split(\" \").length) / 125).toFixed(1)}\r\n                    </b> minutes read\r\n                </p>\r\n\r\n                <h2>Preview</h2>\r\n                <p>\r\n                    <i>\r\n                        {text}\r\n                    </i>\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert &&\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\"><strong>{props.alert.msg}</strong>\r\n</div>\r\n    \r\n    )\r\n}\r\n","import Navbar from './components/Navbar'\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React,{ useState } from 'react';\nimport About from './components/About';\nimport './App.css';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1900);\n  }\n\n  const toggleMode = () => {\n    if (mode == 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\" Text Utility by Yash\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n      {/* <Switch> */}\n          {/* <Route path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route>  */}\n          {/* <Route path=\"/\"> */}\n          <TextForm mode={mode} showAlert={showAlert} />  \n          {/* </Route> */}\n        {/* </Switch> */}\n       \n        \n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}